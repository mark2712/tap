import { makeAutoObservable, runInAction, autorun, reaction, toJS } from 'mobx';
import TAP from '@/TAPconfig';
import messLogStore from '@/store/MessLogStore';
import telegramStore from '@/store/TelegramStore';
import coinsStore, {TapsPackets} from '@/store/CoinsStore';
import energonStore from '@/store/EnergonStore';

import {IUserData, IAuthData} from '@/types/user';
import {Timer} from '@/types/timer';


/* Отвечает за данные о пользователе, способе авторизации (на данный момент только телеграмм) и отправке пакотов с тапами.
тапы прибавляются в coinsStore, а тут отправка происходит пакетами каждые X секунд*/
class MainStore {
    public authData: IAuthData = {};
    public majorСoefficient: bigint = 10000n;
    public isSubmitting: boolean = false; //предотвращает отправку данных на сервер если по какой то причине предыдущие данные всё ещё отправляются

    private userData: IUserData = {
        id: 0,
        lvl: 0,
        amount_coins: 0n,
        mining_per_second: 0n,
        price_on_tap: 0n,
        time_mining: 0,
        time_last_mining: 0,
        batteries: []
    };

    private fetchTimer?: Timer;
    private lastFetchDate: number = Date.now();

    constructor() {
        makeAutoObservable(this, { authData: false }); //если authData данные с телеграмм то их нельзя мутировать (mobx proxy мутирует данные)
        this.authUser();
    }

    set user(userData: IUserData){
        if(userData){
            this.userData = userData;
            if(userData.batteries){
                energonStore.batteries = userData.batteries;
            }
            coinsStore.clacNowCoins(userData);
        }
    }

    get user():IUserData{
        return this.userData;
    }

    get tapPrice(): bigint{
        return coinsStore.tapPrice/this.majorСoefficient;
    }

    get tapPriceFinally(): bigint{
        return coinsStore.tapPriceFinally/this.majorСoefficient;
    }

    get miningPerHour(): bigint{
        return coinsStore.mining_per_second*3600n/this.majorСoefficient;
    }

    get coins(): bigint{
        return coinsStore.coins/this.majorСoefficient;
    }

    private async authUser(){
        let authData: IAuthData = {};

        //загрузить данные с телеграм
        if(typeof window !== 'undefined' ){
            authData = await telegramStore.setTelegramData();
        }
        
        runInAction(() => {
            this.authData = authData;
            this.firstUserDataLoad();
            this.setFetchTimer(setInterval(this.fetchTaps.bind(this), 5000)); //bind на всякий случай
        });
    }

    //каждые Х секунд будет отправлен пакет с тапами (если есть неотправленные тапы и нет незавершенных соединений)
    private fetchTaps = () => {
        runInAction(() => {
            let packet: TapsPackets = coinsStore.formPacket(); // Формируем пакет
            let totalTaps: number = Object.values(packet).reduce((sum, tapData) => sum + tapData.taps, 0); // Считаем количество тапов
            //(если есть неотправленные тапы или прошло 240 сек) и предыдущая отправка завершена
            if ((Object.keys(packet).length > 0 || this.lastFetchDate-Date.now() < 0) && !this.isSubmitting) {
                this.incCoins(packet, totalTaps); // Отправляем пакет на сервер
            }
        });
    }

    //загружаем данные о пользователе как только загружены данные с телеграм
    public async firstUserDataLoad(): Promise<void> {
        if(!this.userData.id){
            await this.fetchUser();
        }
        if(!this.userData.id){
            messLogStore.setStatus('err', '', 'Ошибка загрузки. Обновите страницу', '');
        }
        messLogStore.setFirstLoad();
    }

    //установака нового таймера
    private setFetchTimer(timer: NodeJS.Timeout | any){
        runInAction(() => {
            if(this.fetchTimer){
                clearInterval(this.fetchTimer);
            }
            this.fetchTimer = timer;
        });
    }

    public async fetchUser() {
        return await this.incCoins({}, 0);
    }

    //функция отправки тапов на сервер, так же используется чтобы получить данные о пользователе
    public async incCoins(TapsPacket: TapsPackets, totalTaps: number) {
        this.isSubmitting = true;
        let apiUrl = TAP.apiUrl + 'inc_coins/';
        let userData = await this.fetchData({ taps:totalTaps }, apiUrl);

        runInAction(() => {
            if(userData && userData.success === true){
                coinsStore.confirmPacket(TapsPacket); // Подтверждаем пакет, если отправка успешна
                this.user = userData.data;
                energonStore.batteries = userData.batteries;
            }else{
                coinsStore.revertPacket(TapsPacket); // Восстанавливаем тапы в случае ошибки
            }
            mainStore.lastFetchDate = Date.now()+240000;
            this.isSubmitting = false;
        });
    }

    //отправка чего угодно на сервер с данными для авторизации
    public async fetchData(data: any, apiUrl: string): Promise<any> { 
        return await this.fetchAnyData({...data, data: this.authData}, apiUrl);
    }

    //отправка чего угодно на сервер
    public async fetchAnyData(data: any, apiUrl: string): Promise<any> {
        try {
            const response = await fetch(apiUrl, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data),
            });
            let result = await response.text();
            try {
                let res = JSON.parse(result);
                messLogStore.setStatus('ok', '', '', apiUrl);
                return res;
            } catch (error) {
                messLogStore.setStatus('err', error, 'Ошибка в данных с сервера', apiUrl);
            }
        } catch (error) {
            messLogStore.setStatus('err', error, 'Ошибка сервера. Проверьте соединение с интернетом.', apiUrl);
        }
    }
}


const mainStore = new MainStore();
export default mainStore;



/*--:--:-------------------------------:::---------:------------------:-----------------------------------------
------:::-------------------------::------------------------------------=-:=-:----------------------------------
------------------------------------------:-------------------------:==-:=+*#+----------------------------------
--:----------------------------------------------------------------==--+++++#*+---------------------------------
------------------------------------------------------------------=--+*+++++**+=--------------------------------
--:-----------------------------------------------------------:-=--+++++++++*#++--------------------------------
:-------------------------------------------------------------=--+*+++++++******--------------------------------
-------------------------------------------------------------=-+*++++++****++++--=------------------------------
-----------------------------------------------------------=-=*++++++****+++++=..:-+----------------------------
--------------------------------------------------------:-=-+++++++***+*****++:.:-+***+-------------------------
--------------------------------------------------------=-=*+++++***++#****#*::=*****+**=-----------------------
-------------------------------------------------------=-++++++***+++*#+*******+******+**+----------------------
-----------------------------------------------------===*+++++**+++#%@@%#***++++***++*+++*+---------------------
----------------------------------------------------+-+*++++***+*#@@@@@#:++++*++++++++++++*---------------------
---------------------------------------------------+-+*+++*****%@@@@##@%:+++++++***++*===+*---------------------
--------------------------------------------------+-++++*##*##@@@%##@@@*.+-.....::-==::=*::+--------------------
--------------------------------------------------=+****##*#@@@%#%@@@@*.-=-:::.:::::::-=:..==-------------------
--------------------------------------------------------=%@@@##%@@@@%=:-:.:::::-=====::::::*==------------------
--------------------------------------------------:----:=@@@#%@@@@%+-::.=+==::-====-::::-+*+===--===------------
--------------------------------------------------------::*@@@@@#=:....++:...:--::::::::#@@@@@@#+-::-====-------
-------------------------------------:-------------------:#@@@*-.....:::....:-%+.:::::.=@@@@@@@@@@*-::::--==----
--------------------------------------------------------:-%@#+:.-+=:::::.:.:+@@*.::::::%@@@@@@@@@@@%::::::::-==-
=======--==---------------------------------------------:-#=::-+==::==:.:-=+#@@*.:::::*#@@%##**+++==--===+++++=+
***************++*+*++++++++++++++++++++======+=++++++==+======*-:::----==+#@@%-.:::-#*=--=+++++++=======-------
**********************************************************+++++*#+=:.:......-=---.-*#++*#%##%%#*++++++++++*+++++
=+**+=**++*+=**+=+**+=+**++***************************************#+===========++#%#%%%#%%%#********************
**+++*+++*++*++***+++**+++********************************************%%%#*#**#%%%%%%%%%%%%%********************
****++++*+++++++++++++++++****************************************###%###*#**%#%%%%%%%%%%%%%%*****************++
*****************************************************************#**%##*#**#####*#%%%%%%%%%#%*******************
****************************************************************#%#%%#*#**#%#%#**#%%%%%%%%%%%#******************
**************************************************************#%#%#%#*#***%#%%%#%%%%%%%%%%%#%#******************
+===****===++++=+******************************************#%%##%###*##*#%##%%##%%%#%%%%%%%#%#******************
****++++****++********************************************##%#*%###*#*#*###%###%%%%%%%%%%%%#%#******************
*****************************+***************************%#*%*%###*****#%%%#**#%%#%%%%%%%%%#%#******************
******************+*******++=+=+*******+=-********===:.:.:*##%##%**#***%####*#%#%%#%#%%%%%%%%#******************
******************+++===++*****==++++==+*+=+*****#+==.-:..=@%##%******#%####%###%###%#%%%%%%%#+*****************
+++++++*++*************************+*******+=+====+*::=.:+#%##%***#+**%####%%###=*##%#%%%%%#%*******************
----------====+++++*******************************#=:-::##%####*******%###==::::.:##%#%%%%%%%#******************
============--------====+*************************#=-:-##%###%***#***#####%#:.:==-#%%%#%%%%%%#**==+******=+*****
+++****+++*++++++++=====-----==++*******************=+##%##%%#*******%#####:.:==+%%##%#%%%%#%*==**=======**===++
*********************+++++++==-----=++++***************%##%#%***#****%###%-:-:-+%#%##%#%%%%#%%********#*********
*****************************++==-----==++++++++******#%#####***#****%##%+-*+*%%%#%%#%%%%%%%%%*****+=-+*******==
*******************************++===-----==+=++++++++*%##*-=********#####%%%%%#%%#%%#%%%%%%%%#+++++***==+**+==*+
**##*****************************++++++====---====+++#--:..+***#*****:+###%%%%%%%%%%##%%%%%%%%***********++*****
******#***************************+*****+++++==----=+#*+=::#***#*****::=##%%%#%%%%#%##%%%%%#%#******************
**************++++++***************************+++++#**********#*****:.::=*##%%%%%##-=*#%##+=#+*++++************
**********+++++++==++********************************##**************-::.::-=*######+-----:.-+==========++++++++
*****++++++=======+++**********************************###**************+=--:::::::::=::----+=-------------=----
+++++++++===--===+**************#*#***********************%####***********************.-==-:-*==+===+++*++***+**
++===+====---=++***************%%#*##*##******************#%#**####%##***************=:=****=-#*****************
========----==+**####***************#********************###*******#%**#####**#######=::-=+*+:=#****************
------------==++++**************#***#***************%%##%#*******##%#**********%%#####%#*++==--*****************
-------------===+++***********%#####***#%#*****##***@@@@%#*****##%#************%#**#***#%****##*************#***
---------------==+++++*********#####**##%*****#*****#%%%@@%%##%%#%*************#%##****##%***************#*#**##
-----------------====++*********************##*********************************#%#%#**##%@@%#*******#%#**#***#%#
+++---------------==+++*********#%#******##*************************************##%#%%%@@@%%%###********########
+*%+-------------=+++***********************************************%=*%*=%******************#******###*#**#####
++%*+++==+++=-=+*###############**##########****#######***#######*##@#---#@#**#####################%%#########**
#%@*. :@#..-%++%:    ...#@.    =%%-..:@=..:@***%=.   .=%#%=.   .-%@= .=@+..+##%.     .-@%.    .*.      .%:. :@**
@@@*  .@:  :%**%+=.  .==%#     .@@:  .@.  -%**%=   #.  -@+   #.  -@=  -%.  =%#%   :   :@%   :==#==   .==@:  :@**
@@%*  .=   :%****@:  :@*%+  :.  #@:  .%.  -%**%-   @:  :@=  .@:  :@-  --   =%%#   +:  :@%   -%##*%.  -%*%-  -@**
%@#*       :%****%:  :@*%:  =-  +@:      =%#**%-   @@@@@@-  .@:  :@-       =%%+   #.  :@%     .%*%.  -%*%=  =%**
@%#*   .-  :%****%:  :%*%.  =-  :@:  .#.  =%**%-   @-..-@=  .@:  :@-   ..  =%@-  :@:  :@%   -#*#*%.  -%*%+  +%++
==**   +=  :%****%:  :%##        %:  .@.  -%**%=   %:  -@=  .@:  :@=   *:  =@+   -*.  .#%   :**##%   -%*%*--*#+=
=+#*  .@=  :%****%:  :@%=  .%#   *:  .@:  :@**##:  .  :#%%:  .  .#@-  -@:  =#          -%      =@%.  -%*%-  -%==
***#**###**##****##**###%#*#%%#*######%#**#%***###***##***##***##**#**#%#**%#  .##*#+  -@#*****####**##*##***+=-
********###************%%#**************************************************#++*%**##++*#*****************++==*/